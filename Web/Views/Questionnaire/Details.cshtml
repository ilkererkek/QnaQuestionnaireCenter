@using Entity.Concrete.Enums
@model QuestionnaireViewModel
@{
    ViewData["Title"] = "Details";
    Layout = "~/Views/Shared/_Layout.cshtml";
}

<h1>Details</h1>

<h1>@Model.Questionnaire.Name</h1>


<div class="row">
    <div class = "col-7">
            <div class="card text-dark  mb-3" >
            <div class="card-header">Header</div>
            <div class="card-body">
                 @{
                    if(Model.Questionnaire.Questions != null && Model.Questionnaire.Questions.Count != 0)
                    {
            
                    }
                    else
                    {
                       <p> There is no questions in this Questionnaire yet!</p> 
                    }
                }
                </div>
        </div>
    </div>
     <div class="col-5">
        <div class="card border-dark">
            <div class="card-header">
                <h4>Add Question</h4>
            </div>
            <div class="card-body">

               <form asp-action="Add" >
                    <div asp-validation-summary="ModelOnly" class="text-danger"></div>
                    <div class="form-group">
                        <label asp-for="Question.Text" class="control-label"></label>
                        <textarea asp-for="Question.Text" class="form-control" rows=5></textarea>
                        <span asp-validation-for="Question.Text" class="text-danger"></span>
                    </div>
                    <div class="form-group mt-2">
                         <label >Type:</label><br />
                         @foreach (var item in System.Enum.GetValues(typeof(QuestionType)))
                          {
                             <input asp-for="Question.Type" type="radio" class="btn-check" name="options-outlined" id="@System.Enum.GetName(typeof(QuestionType),(int)item)" autocomplete="off" value = "@((int)item)" >
                             <label class="btn btn-outline-primary" for="@System.Enum.GetName(typeof(QuestionType),(int)item)"> @System.Enum.GetName(typeof(QuestionType),(int)item)</label>
                         }
                         <span asp-validation-for="Question.Type" class="text-danger"></span>
                    </div>
                    <input type="hidden" asp-for="Question.QuestionnaireId" value = "@Model.Questionnaire.Id" />
                        <div class="form-group mt-2">
                        <input type="submit" value="Add" class="btn btn-primary" />
                       </div>
                    </form>

            </div>
         </div>
    </div>
    </div >

    

